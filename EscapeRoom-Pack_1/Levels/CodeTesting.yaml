# Key Gate testing level

# Included files will be loaded and their contents referenced here.
# In the event of any clashes, the _including_ file 'wins'.
include: [ LevelsShared.yaml ]

# Properties about the file like its creator
fileProperties:
  creatorName: BenBR
  

sceneName: World1Dev


grid: | # 2, 3, 4, 5, 6, 7,      8, 9,10,11
  gm,--,--,--,--,--,--,--
  //,p1,==,\s,rl,\s,==,==
  //,\e,==,¬s,gl,\s,pr,==
  //,==,==,==,==,\s,==,==
  //,==,==,k2,==,\s,p2,==     ,~~,~~,~~,~~
  //,==,==,==,==,\s,==,==
  //,k1,==,¬e,==,¬s,==,==
  //,==,==,\n,==,==,==,==


gridObjects:
  
  --: [ wall2_s ]
  //: [ wall2_e ]
  ==: [ f2 ]
  
  ~~: [ ]

  #Keys
  k1: [ f3, k1_s ]
  k2: [ f2, k2_s ]
  
  #Gates
  gl: [ f4, gl_s ]
  gs: [ f5, gl_s_key ]
  gt: [ f2, gt_s ]
  
  #PressurePlates
  pr: [ f5, pr_plate ]
  
  # Exits
  rl: [ f3, rl_s ]
  
  # Short Objects
  \s: [ f3, fence_s ]
  \n: [ f2, fence_n ]
  \e: [ f4, fence_e ]
  ¬s: [ f2, fence_edge_s ]
  ¬e: [ f5, fence_edge_n ]
  

  p1: [ f4, p1 ]
  p2: [ f5, p2 ]

objectDefinitions:
  # Can be defined here or, more likely, both here _and_ in LevelsShared.yaml
  # Set-up base values in LevelsShared.yaml and override here.
  k1_s: { mapObject: Custom, mods: Coin, dir: south, art3d: [ { model: "Art/3D/Coin.glb", pos: {x: -0.3, y: -0.2, z: -0.2}, rot: {x: 0, y: -25, z: 0}, scale: {x: 0.6, y: 0.6, z: 0.6} } ] }
  gl_s_key: { mapObject: gate, mods: [ { name: Gate, data: { activatorType: 'shortkey' } } ], dir: south, art3d: [ { model: "Art/3D/GateLarge.glb", pos: {x: 0, y: -0.2, z: 0.15}, rot: {x: 0, y: 0, z: 0}, scale: {x: 0.08, y: 0.1, z: 0.1} } ], tags: [ "blocksMove", "gate" ] }


sounds:
  # See CoOperation for examples using sound

globalData:

